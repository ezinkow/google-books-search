{"version":3,"sources":["components/SearchForm.js","components/BookList.js","components/SavedBooks.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","handleSearch","handleSubmit","search","onSubmit","type","onChange","value","placeholder","useStyles","makeStyles","root","width","container","maxHeight","BookList","apiResponse","classes","Grid","item","xs","Paper","className","TableContainer","Table","stickyHeader","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","book","component","scope","volumeInfo","subtitle","title","authors","join","description","imageLinks","src","smallThumbnail","href","infoLink","onClick","id","foundBook","find","console","log","authorsString","bookObject","image","link","axios","post","handleSaveToDb","SavedBooks","books","length","Header","to","BooksApp","useState","bookSearch","setBookSearch","setApiResponse","setBooks","event","a","preventDefault","apiCall","fetch","response","json","results","items","useEffect","data","fetchBooks","path","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d62e653e.chunk.js","sourcesContent":["export default function SearchForm({handleSearch, handleSubmit, search}){\n    return (\n      <div>\n        <h2>Search a Book or Author</h2>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" onChange={handleSearch} value={search} placeholder='Search Books'/>\n          <input type=\"submit\"/>\n        </form>\n      </div>\n    )\n  }","import React, { useState, useEffect } from 'react'\nimport {\n    Link\n} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 10000000,\n    },\n})\n\nexport default function BookList({ apiResponse }) {\n    const classes = useStyles();\n\n    function handleSaveToDb(id) {\n        // console.log('idid', id)\n        // const foundBook = apiResponse\n        const foundBook = apiResponse.find(book => book.id === id)\n        console.log('found', foundBook)\n        // const updateSavedBook = savedBook.slice()\n        // updateSavedBook.push(foundBook)\n        let authorsString = foundBook.volumeInfo.authors.join(', ')\n        const bookObject = {\n            id: foundBook.id,\n            title: foundBook.volumeInfo.title,\n            authors: authorsString,\n            description: foundBook.volumeInfo.description,\n            image: foundBook.volumeInfo.imageLinks.smallThumbnail,\n            link: foundBook.volumeInfo.infoLink,\n        }\n\n        console.log('obj', bookObject)\n        axios.post('/api/books', bookObject)\n    }\n    // console.log('saved', savedBook)\n\n    if (apiResponse) {\n        return (\n                <Grid item xs={12}>\n                    <Paper className={classes.root}>\n                        <TableContainer className={classes.container}>\n                            <Table stickyHeader size=\"small\" aria-label=\"book table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell align=\"center\">Title</TableCell>\n                                        <TableCell align=\"center\">Author/s</TableCell>\n                                        <TableCell align=\"center\">Description</TableCell>\n                                        <TableCell align=\"center\">Image</TableCell>\n                                        <TableCell align=\"center\">Link</TableCell>\n                                        <TableCell align=\"center\">Add to Database</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {apiResponse.map(book => (\n                                        <TableRow key={book.id}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {book.volumeInfo.subtitle ?\n                                                    <p>{book.volumeInfo.title}: {book.volumeInfo.subtitle}</p>\n                                                    : <p>{book.volumeInfo.title}</p>}\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {book.volumeInfo.authors ? <p>{book.volumeInfo.authors.join(\", \")}</p> : \"\"}\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                <p>{book.volumeInfo.description}</p>\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {book.volumeInfo.imageLinks ?\n                                                    <img src={book.volumeInfo.imageLinks.smallThumbnail} /> : \"\"}\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                <a href={book.volumeInfo.infoLink}>Link</a>\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                <button onClick={() => handleSaveToDb(book.id)}>Add book to database</button>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </Paper>\n                </Grid>\n        )\n    } else {\n        return (\n            <>\n            </>\n        )\n    }\n}","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 10000000,\n    },\n})\n\nexport default function SavedBooks({ books }) {\n    const classes = useStyles();\n    console.log('savedbooks', books)\n    \n    function handleDelete(id) {\n\n    }\n\n    // if (books == true) {\n    // var saved =\n\n    // } else { var saved = \"\" }\n\n    return (\n        <Grid item xs={12}>\n            <Paper className={classes.root}>\n                <TableContainer className={classes.container}>\n                    <Table stickyHeader size=\"small\" aria-label=\"book table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Title</TableCell>\n                                <TableCell align=\"center\">Author/s</TableCell>\n                                <TableCell align=\"center\">Description</TableCell>\n                                <TableCell align=\"center\">Image</TableCell>\n                                <TableCell align=\"center\">Link</TableCell>\n                                <TableCell align=\"center\">Add to Database</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {books.length > 0 ? books.map(book => (\n                                <TableRow key={book.id}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {/* {book.subtitle ?\n                        <p>{book.volumeInfo.title}: {book.volumeInfo.subtitle}</p>\n                        :  */}\n                                        {<p>{book.title}</p>}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {<p>{book.authors}</p>}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <p>{book.description}</p>\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {<img src={book.image} />}\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <a href={book.link}>Link</a>\n                                    </TableCell>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        <button onClick={() => handleDelete(book.id)}>Delete book</button>\n                                    </TableCell>\n                                </TableRow>\n                            )): \"\"}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Paper>\n        </Grid>\n    )\n}\n\n","import {\n    Link\n} from \"react-router-dom\";\n\nexport default function Header() {\n    return (\n        <>\n            <Link to=\"/\">\n                <button>Home</button>\n            </Link>\n            <Link to=\"/savedbooks\">\n                <button>Saved Books</button>\n            </Link>\n        </>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport SearchForm from './components/SearchForm'\nimport BookList from './components/BookList'\nimport SavedBooks from './components/SavedBooks'\nimport axios from 'axios'\nimport Header from './components/Header'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nexport default function BooksApp() {\n  const [bookSearch, setBookSearch] = useState()\n  const [apiResponse, setApiResponse] = useState()\n  const [books, setBooks] = useState([])\n\n  const handleSearch = event => {\n    setBookSearch(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    const apiKey = 'AIzaSyBiRAp_gwEMeGdVrexvBfEnvJYmBC0iUEk'\n    const apiCall = `https://www.googleapis.com/books/v1/volumes?q=${bookSearch}&maxResults=20&printType=books&key=${apiKey}`\n\n    try {\n      const response = await fetch(apiCall)\n      const results = await response.json()\n      console.log('results', results.items)\n      setApiResponse(results.items)\n    } catch (err) {\n      console.log(err)\n    }\n    //  await setBookSearch(\"\")\n  }\n  useEffect(() => {\n    console.log('apiresponse', apiResponse)\n  })\n\n\n  useEffect(() => {\n    async function fetchBooks() {\n      try {\n        const response = await axios('/api/books')\n        console.log('response', response.data)\n        setBooks(response.data)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    fetchBooks()\n  }, [])\n  // console.log('booksss', books)\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/savedbooks\">\n            <Header />\n            <SavedBooks\n              books={books} />\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <SearchForm\n              handleSearch={handleSearch}\n              handleSubmit={handleSubmit}\n              bookSearch={bookSearch}\n            />\n            <BookList\n              apiResponse={apiResponse} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}